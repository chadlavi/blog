<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2019-12-21T02:52:58+00:00</updated><id>/blog/feed.xml</id><title type="html">Chad Lavimoniere</title><subtitle>Design engineer, library maintainer. Formerly freelance, currently design system and frontend component library maintainer at &lt;a href=&quot;https://casebook.net&quot; target=&quot;_blank&quot;&gt;Casebook&lt;/a&gt;.</subtitle><author><name>Chad Lavimoniere</name></author><entry><title type="html">Turning github into a CMS with Jekyll and Travis-CI</title><link href="/blog/2019/10/30/building-jekyll-blog.html" rel="alternate" type="text/html" title="Turning github into a CMS with Jekyll and Travis-CI" /><published>2019-10-30T00:00:00+00:00</published><updated>2019-10-30T00:00:00+00:00</updated><id>/blog/2019/10/30/building-jekyll-blog</id><content type="html" xml:base="/blog/2019/10/30/building-jekyll-blog.html">&lt;p&gt;I originally created this blog as an excuse to experiment with &lt;a href=&quot;https://jamstack.org/&quot; target=&quot;_blank&quot;&gt;the JAM stack&lt;/a&gt;, but I quickly realized I didn’t really need any CRUD functionality; it’s just a blog, no forms or uploads to speak of. The initial code for that never made it to a git repo, and frankly didn’t get too far past an &lt;code class=&quot;highlighter-rouge&quot;&gt;npx create-react-app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I still wanted to create a fast, responsive, accessible site that’s templatized and just needs markdown changes to create new stuff. My &lt;a href=&quot;https://github.com/chadlavi/chadlavimoniere.com&quot; target=&quot;_blank&quot;&gt;old blog&lt;/a&gt; was an experiment in using the LAMP stack to do something sort of like this, but it was really cumbersome; I ended up storing the markdown content for the posts in a MySQL database, so it was still fairly technologically intensive to update.&lt;/p&gt;

&lt;h2 id=&quot;jekyll--github-pages&quot;&gt;Jekyll + GitHub Pages&lt;/h2&gt;

&lt;p&gt;That’s when I realized that Jekyll and GitHub Pages would probably be a good fit for this. I’d used both at work (Jekyll for an abortive first-stab at a company-wide branding guide site; GitHub Pages to host the documentation for my component libraries), but had always used them with a workflow like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;develop stuff locally
  |
  V
do a manual build locally
  |
  V
push build artifacts to GitHub Pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It was somewhat convenient. Jekyll let me write content in markdown, which made it way more portable and way more approachable to non-tech folks. GitHub Pages is free, pretty much infrastructure-less, and well-documented. But the need to manually build then push build artifacts to a hosting environment seemed like a rough edge I could sand off.&lt;/p&gt;

&lt;h2 id=&quot;adding-travis-ci&quot;&gt;Adding Travis CI&lt;/h2&gt;

&lt;p&gt;Never do something yourself that a robot can do for you. The steps to build and deploy a Jekyll site on GitHub Pages were repetitive, so I went looking for a robot who could do it for me.&lt;/p&gt;

&lt;p&gt;I went with Travis CI because it has great integration into GitHub, and is also free and relatively infrastructure-less.&lt;/p&gt;

&lt;p&gt;The basic setup was pretty simple: I connected my Travis CI and GitHub accounts, added my GitHub access token to Travis CI’s secrets manager, and created a &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;caching&quot;&gt;Caching&lt;/h2&gt;

&lt;p&gt;Probably the most important improvement I made in the whole process was to set up Travis CI to cache correctly! I ended up doing &lt;a href=&quot;https://docs.travis-ci.com/user/caching#cache-rvm-ruby-version-for-non-ruby-projects&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/travis/.rvm/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It reduced my total build times from an average of 3 minutes 20 seconds to an average of 45 seconds, or about four times faster.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/faster-builds.png&quot; alt=&quot;screenshot showing two markedly different build times; 3 minutes and 28 seconds before this change, versus 46 seconds after.&quot; /&gt;
  &lt;figcaption&gt;The &lt;a href=&quot;https://travis-ci.org/chadlavi/blog/builds/605132241&quot; target=&quot;_blank&quot;&gt;last  build before the change&lt;/a&gt; had an install time of 153.21 seconds; the &lt;a href=&quot;https://travis-ci.org/chadlavi/blog/builds/605134945&quot; target=&quot;_blank&quot;&gt;first build after the change&lt;/a&gt; had an install time of &lt;i&gt;0.38 seconds&lt;/i&gt;. That's roughly 400 times faster.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;You can see the full build log for this blog at &lt;a href=&quot;https://travis-ci.org/chadlavi/blog/builds&quot; target=&quot;_blank&quot;&gt;https://travis-ci.org/chadlavi/blog/builds&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;new-workflow&quot;&gt;New workflow&lt;/h2&gt;

&lt;p&gt;I actually completely composed this blog post (and even added the image above) &lt;em&gt;directly in the text editor on GitHub&lt;/em&gt;. With Travis CI set up to automatically run builds whenever new changes are committed on the master branch of this repository, I can basically treat the &lt;em&gt;Create new file&lt;/em&gt; text input like it’s a markdown-specific CMS.&lt;/p&gt;

&lt;p&gt;I’m anticipating that this is going to mean a lot more freedom in how I can add new blog posts or edit existing ones in the future; the only thing I can’t do directly from GitHub is preview changes accurately, or change more than one file per commit. This will probably mean sort of a separation of concerns: markdown I can compose and upload from anywhere, but template or infrastructure changes will still need a more traditional dev setup.&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="jekyll" /><category term="markdown" /><category term="travis-ci" /><summary type="html">I originally created this blog as an excuse to experiment with the JAM stack, but I quickly realized I didn’t really need any CRUD functionality; it’s just a blog, no forms or uploads to speak of. The initial code for that never made it to a git repo, and frankly didn’t get too far past an npx create-react-app.</summary></entry><entry><title type="html">Hacking together a prototype homepage in less than an hour</title><link href="/blog/2018/09/12/hacking-prototype-homepage.html" rel="alternate" type="text/html" title="Hacking together a prototype homepage in less than an hour" /><published>2018-09-12T00:00:00+00:00</published><updated>2018-09-12T00:00:00+00:00</updated><id>/blog/2018/09/12/hacking-prototype-homepage</id><content type="html" xml:base="/blog/2018/09/12/hacking-prototype-homepage.html">&lt;h2 id=&quot;some-backstory&quot;&gt;Some Backstory&lt;/h2&gt;

&lt;p&gt;In early 2018, my team at Arazoo were working on an interesting experimental product: a search engine specifically for lighting products.&lt;/p&gt;

&lt;p&gt;This was the outcropping of a ton of customer development work we were doing at the time, trying to hone in on why there were problems in our customer acquisition, onboarding, and retention pipeline.&lt;/p&gt;

&lt;p&gt;I’ll write about our customer development journey elsewhere, but to sum it up here: we found that product discovery was a huge pain in the butt for architects and interior designers. They had a notion in their head of what they wanted, but the tools available to bridge the gap between their ideal and a real-world product were limited.&lt;/p&gt;

&lt;p&gt;The tools broke down into roughly two buckets: search and curation.&lt;/p&gt;

&lt;p&gt;On the search side, they needed to know exactly what keywords to use in generic search engines to narrow down to the type stuff they wanted; but even if they’re precise, those generic search engines (like, say, Google) also return a whole lot of results that aren’t applicable for a design professional (for example, consumer-grade products from big box stores and chain home renovation depots). Searching was largely a problem of too much noise and not enough signal.&lt;/p&gt;

&lt;p&gt;On the curation side, they had to work assiduously to curate their list of curated lists. Most designers do most of these things (many do all of them): subscribe to industry magazines; maintain relationships with reps from suppliers and manufacturers who match their style; follow influencers on Instagram; browse Pinterest; browse Houzz; ask around to friends and colleagues; and pilfer from past projects. An interior designer’s curated stream of inspiration and product opportunities is only as good as the attention and care they devote to curating their sources (and relationships). This works out great if you’re at the top, but it’s a big pain in the butt if you’re a little guy, or a junior designer.&lt;/p&gt;

&lt;p&gt;So we saw that we could basically combine some of the best of both to make a more empowering product discovery engine. We started from search, but wanted to address some of the biggest problems with search: namely, the ineffable “that”ness of the designer’s mental ideal, and the loads of irrelevant results they got from generic search engines. We would address this by giving deeper filtering criteria than a generic search engine might give, and by bringing in some of our own curation in the form of deep categorization. The thought here was basically to give designers explicit and precise control over filtering the content they see in search results, but also to do our own initial passes at preventing bad results from getting in at all and categorizing everything by styles and price ranges as they were indexed. This would allow a designer to, for example, search for “midcentury modern wooden coffee tables between $1500 and $2000, available in the New York City area” and get some cromulent results. I’m simplifying and skipping over a lot of the technical details here, but that’s the gist.&lt;/p&gt;

&lt;p&gt;This, of course, is a huge undertaking. So to cut down scope for our MVP, we decided to focus on one vertical: lighting.&lt;/p&gt;

&lt;p&gt;Architectural and decorative lighting is, if you didn’t know, an opaque and byzantine industry. Lights are so highly configurable that the manufacturers usually produce interchangeable/customizable parts, rather than whole fixtures, and lighting distributors are the ones who warehouse those parts, configure them, and sell completed fixtures to retailers, resellers, or direct to consumers.&lt;/p&gt;

&lt;p&gt;This makes for a pretty complex setup for designers (some of whom are resellers) looking to get accurate lead times and prices; as opposed to verticals with fixed product offerings, the designer is at least two steps away from the people designing the product. The only source for information is the distributor, but lighting distributors are a middle man who have their own lead times and profit margins to consider, so the lead times and prices delivered to designers have some padding in them. Basically, it’s a big game of telephone, but instead of garbling a common phrase, it has the effect of making that ceiling-mounted light fixture you want for your hallway $2500 when its components cost about $250 to produce.&lt;/p&gt;

&lt;p&gt;Transparent price information was one opportunity we saw to make a big difference here, but before that, there was just the basics of discovering existing available products that match a look, budget and location.&lt;/p&gt;

&lt;h2 id=&quot;making-the-homepage&quot;&gt;Making The Homepage&lt;/h2&gt;

&lt;p&gt;We had a hypothesis; we quickly started working on an actual app that could demonstrate this experience. But we also wanted to see how big our addressable market was for this. Enter a teaser landing page.&lt;/p&gt;

&lt;p&gt;Our developers were busy working on our prototype to test out with early users we met in person, so I took the shortest route I could to getting a landing page put up.&lt;/p&gt;

&lt;h3 id=&quot;branding-just-make-it-consistent&quot;&gt;Branding: Just Make It Consistent&lt;/h3&gt;

&lt;p&gt;We had no formal plans for the branding, name, or feel of the product. Which wasn’t really a big deal anyway; we just needed something coherent enough to serve as a test, and we could throw all of it out later. I the brand it needed to be something that felt easy, stylish, friendly and simple; these are stylish people who are seeking relief from an annoying, expansive process of digging through endless piles for occasional gems.&lt;/p&gt;

&lt;p&gt;I started out by shopping for a domain name. I wanted to try to find something that suggested light, but wasn’t a common word (expensive; likely already taken). After some searching on namecheap, I found &lt;em&gt;lutr.us&lt;/em&gt;. “Lutrus” sounds vaguely related to light. It’s not a real word, and no one’s competing for it. The domain cost $0.88 a year. I bought it.&lt;/p&gt;

&lt;p&gt;So now I had a name to use for the product. I next made a few arbitrary visual decisions. I picked some base colors to use: white, charcoal, serge blue, muted lilac, and forest green.  I decided to push a simple+technological feel by using a monospace font, Menlo. I wanted you to feel like you were talking right to the computer, an open, honest, simple dialogue with a powerful engine.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/12/lutrus-branding.png&quot; alt=&quot;lutrus branding&quot; /&gt;
  &lt;figcaption&gt;branding for lutrus&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I made a single-page homepage with a few hero sections for the big features; the top is a CTA to sign up for early access (i.e., join our mailing list), then a section about search, then a section about filtering, then another CTA to sign up. I added some highly speculative mockups to the feature sections.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/12/mockups.jpg&quot; alt=&quot;highly speculative mockups&quot; /&gt;
  &lt;figcaption&gt;highly speculative mockups&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I put all this in a &lt;a href=&quot;https://github.com/chadlavi/lutrus&quot; target=&quot;_blank&quot;&gt;git repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lamp-but-without-the-am-and-a-different-p&quot;&gt;LAMP but without the AM (and a different P)&lt;/h3&gt;

&lt;p&gt;To host it, I spun up a vanilla Ubuntu 16 vm on DigitalOcean and cloned my git repo onto it. Even though it was static content, I went with a vm instead of hosting the files from S3 for a couple reasons. First, S3 (and, really, AWS in general) is a terrible user experience! I didn’t want to have to do this via uploading (and reuploading) files in a web interface. Second, it was a lot easier and cleaner to spin up a new vm in DO than it would be to go ask my programmers for permission to make a new bucket etc etc in S3. Third, I wanted to be able to actually host the experimental prototype there in the future.&lt;/p&gt;

&lt;p&gt;So I had my code on the vm, and I had my domain name. DO made it really easy to to the ns routing to point my cheap domain at the virtual machine. All I had to do was actually serve the page.&lt;/p&gt;

&lt;p&gt;I was starting to get it set up with Apache, when I got pulled into a meeting. This was at about 4pm; we had planned to get this site up and running before 5pm. Uh-oh.&lt;/p&gt;

&lt;p&gt;Fast forward 45 minutes, and I ducked out of the meeting to address this. I still hadn’t settled on the final graphics or copy for the first run of the page, though that didn’t really matter; I just needed to get &lt;em&gt;some&lt;/em&gt; live version up so that I could set up a Google AdWords campaign (it’s poor hygiene, and also something Google dings you for, to point an AdWords campaign at a page that isn’t live yet). Short on time, I pulled out one of the most fun tricks I knew: &lt;code class=&quot;highlighter-rouge&quot;&gt;python -m http.server&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Yes, that’s right, I served a static page from a temporary python server in production!&lt;/p&gt;

&lt;p&gt;Well, almost. It’s not &lt;em&gt;that&lt;/em&gt; bad. I used certbot to get an ssl cert then did it over https. You can see the setup for what I did in the repo.&lt;/p&gt;

&lt;h2 id=&quot;measuring-it&quot;&gt;Measuring It&lt;/h2&gt;

&lt;p&gt;I also added FullStory and Google Tag Manager to the homepage, so we could watch sessions and measure stuff. We ended up getting a pretty positive response, and recruited a few dozen people who were willing to talk to us and do user testing sessions on the prototype.&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="prototyping" /><category term="designing in code" /><summary type="html">Some Backstory</summary></entry><entry><title type="html">Prototyping with InVision Studio</title><link href="/blog/2018/09/10/invision-studio.html" rel="alternate" type="text/html" title="Prototyping with InVision Studio" /><published>2018-09-10T00:00:00+00:00</published><updated>2018-09-10T00:00:00+00:00</updated><id>/blog/2018/09/10/invision-studio</id><content type="html" xml:base="/blog/2018/09/10/invision-studio.html">&lt;p&gt;&lt;em&gt;Note: InVision Studio prototypes currently are not supported on macs with Intel HD 4000 GPUs (&lt;a href=&quot;https://support.apple.com/en-us/HT204349#intelhd&quot;&gt;most 2012-2013 models&lt;/a&gt;). This is a &lt;a href=&quot;https://support.invisionapp.com/hc/en-us/community/posts/360014933931/comments/360001806692&quot;&gt;known issue with InVision&lt;/a&gt;. If you attempt to view the following prototypes on an affected mac, you’ll likely get a garbled, unintelligible screen.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;I’ve been a big fan of InVision since I first started using their web app in 2014; so when I caught wind of a beta desktop design app they were planning to release back in 2017, I immediately jumped onboard. I got access to InVision Studio in January 2018.&lt;/p&gt;

&lt;p&gt;Most of the work I’ve done in 2018 has been experimental/direct building, so I’ve only had a few opportunities to use InVision Studio to prototype.&lt;/p&gt;

&lt;h2 id=&quot;document-explorer&quot;&gt;Document Explorer&lt;/h2&gt;

&lt;p&gt;My team started work on a document exploration app for architectural drawing sets in May of this year. The app would allow architects and designers to upload individual drawing files and tag them, then allow the consumers of their drawing sets (contractors, subcontractors, engineers, clients) to interactively make sets of &lt;em&gt;just the drawings they needed&lt;/em&gt;. This was an attempt to solve a longstanding problem with physical drawing sets produced in architecture today: the designs relevant to one person’s work are scattered throughout the document set, which is often hundreds of pages long. Finding all the drawings you need, and comparing/contrasting drawings that are far away from each other, is a constant struggle.&lt;/p&gt;

&lt;p&gt;This product unforunately ended up getting shelved; there was a rights disagreement between the idea’s originator and our company ownership, and they parted ways.&lt;/p&gt;

&lt;p&gt;But my initial MVP prototype still exists. In this prototype, you can create a project, simulate uploading images in bulk and tagging them, then filter your new project on those tags.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://projects.invisionapp.com/prototype/mvp-flow-cjhkmosiq00coo201mzehj69x/play/39763228&quot;&gt;&lt;img src=&quot;http://chadlavimoniere.com/images/2018/09/prototyping/planit-mvp.jpg&quot; alt=&quot;Architectural Document Explorer MVP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tile-resizing-demo&quot;&gt;Tile Resizing Demo&lt;/h2&gt;

&lt;p&gt;In our initial version of &lt;a href=&quot;https://prsnt.app&quot;&gt;prsnt.app&lt;/a&gt;, we had a fixed layout of three tiles per page, which flowed onto as many pages as needed. In part, this was because the users we initially talked to about presentation were highly technical. For them, the image was secondary, or perhaps even tertiary; it was included more as a visual reference to anchor the technical information than as a piece of presentation/decision making per se. We quickly realized that this wasn’t a majority use case; interior designers and decorators generally give presentations that are more akin to collages than specifications, and for them the ability to add more images to the page and lay them out beautifully was a must-have.&lt;/p&gt;

&lt;p&gt;My colleague Peter and I had a long discussion one day about how to solve this. How could we let users add a varying number of items to the page while still making sure the page flow was controlled, and the user could accurately predict how many items would be on the page?&lt;/p&gt;

&lt;p&gt;It occured to me that we could take the length of the list of items added to a given page, then change the layout of the page based on that length; basically, we would bootstrap ourselves some responsive layouts based on item count.&lt;/p&gt;

&lt;p&gt;This is the quick demonstration I made to illustrate that concept to Peter and our developers. In this demo, you can click the “Add Tile” button to simulate dragging and dropping a new image onto the page; the tiles on the page will adjust to accommodate the new tile. For layouts of 3+ tiles, you can also click the +/- button on the first tile to make it fullheight. This yields a total of 14 different layouts for 8 tiles.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://projects.invisionapp.com/prototype/11x17-layout-cjj1rnjl5003mem01w34vnx28/play/3aadbc7e&quot;&gt;&lt;img src=&quot;http://chadlavimoniere.com/images/2018/09/prototyping/prsnt-tile-exploration.jpg&quot; alt=&quot;Tile Resizing Demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The basic mechanics of this demonstration are still at the heart of our layout engine in prsnt.app, though we’ve extended and refined it since its inception.&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="prototyping" /><category term="invision" /><summary type="html">Note: InVision Studio prototypes currently are not supported on macs with Intel HD 4000 GPUs (most 2012-2013 models). This is a known issue with InVision. If you attempt to view the following prototypes on an affected mac, you’ll likely get a garbled, unintelligible screen.</summary></entry><entry><title type="html">Prorotyping with Sketch + InVision</title><link href="/blog/2018/09/08/sketch-plus-invision.html" rel="alternate" type="text/html" title="Prorotyping with Sketch + InVision" /><published>2018-09-08T00:00:00+00:00</published><updated>2018-09-08T00:00:00+00:00</updated><id>/blog/2018/09/08/sketch-plus-invision</id><content type="html" xml:base="/blog/2018/09/08/sketch-plus-invision.html">&lt;h2 id=&quot;arazoo-product-reviews&quot;&gt;Arazoo Product Reviews&lt;/h2&gt;

&lt;p&gt;In the fall of 2017, we experimented with allowing users to review products and materials on Arazoo, to share publicly with the userbase.&lt;/p&gt;

&lt;p&gt;In this prototype, you can review a product, attaching your own images, rating the product, and giving your sentiment on the product’s price.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://invis.io/FBNYYTQE7V5#/252992521_Reviews_Normal_State_-_You_Have_Not_Reviewed&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/blog/images/2018/09/08/reviews-prototype.jpg&quot; alt=&quot;Reviewing a product in Arazoo&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;arazoo-collections&quot;&gt;Arazoo Collections&lt;/h2&gt;

&lt;p&gt;In early 2018, we started work on a new community feature for Arazoo called Collections—basically, it was a way for users to blog about combinations of finishes and materials within the Arazoo platform. This was the prototype I made for the initial version.&lt;/p&gt;

&lt;p&gt;In this prototype, you can create a collection, customize it with a header image, and add text.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://invis.io/T3NYUCH2RUE#/282459609_create_Collection_Start&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/blog/images/2018/09/08/collections-prototype.jpg&quot; alt=&quot;Creating a Collection in Arazoo&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="protoyping" /><category term="sketch" /><category term="invision" /><summary type="html">Arazoo Product Reviews</summary></entry><entry><title type="html">How I designed the logo for prsnt.app</title><link href="/blog/2018/09/07/logo-design.html" rel="alternate" type="text/html" title="How I designed the logo for prsnt.app" /><published>2018-09-07T00:00:00+00:00</published><updated>2018-09-07T00:00:00+00:00</updated><id>/blog/2018/09/07/logo-design</id><content type="html" xml:base="/blog/2018/09/07/logo-design.html">&lt;p&gt;When we started &lt;a href=&quot;https://prsnt.app&quot; target=&quot;_blank&quot;&gt;prsnt.app&lt;/a&gt;, we didn’t really have a logo in mind; originally, it was just a hacky prototype that ran on our local machines, with no users, no marketing or public pages, just the core layout manipulation functionality and web-clipping functionality.&lt;/p&gt;

&lt;p&gt;As we started getting interest from potential early adopters, though, we pretty rapidly needed to throw together a hosted version of the app. The very first hosted version at prsnt.app was actually not much more than what we’d run on our macbooks: no user, no login, just a url where you could go and play with the functionality. We shared this with a few early users at interior design firms, but they almost immediately said, “I really want to be able to like, you know, &lt;em&gt;actually do stuff&lt;/em&gt; with this.”&lt;/p&gt;

&lt;p&gt;So, we needed some real stuff. We needed accounts. We needed persistent data. We also needed a real version of our web-clipper. Up to this point, it didn’t have a logo, just a solid colored square placeholder; it was also not distributed via the Google Chrome Webstore yet at that point. So I set out to make a placeholder logo.&lt;/p&gt;

&lt;h2 id=&quot;the-placeholder&quot;&gt;The placeholder&lt;/h2&gt;

&lt;p&gt;The placeholder logo I made was really just a brand color + concept mashup. I took the FontAwesome icon for a desktop computer screen, and put the FontAwesome icon for a cloud over it. I made the frame of the screen and the cloud both our accent/link/button color, and called it a day. It suggested cloud-based display or presentation, and it matched the colors we used on the site. I shipped it and moved on to other concerns.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/07/placeholder.jpg&quot; alt=&quot;the original placeholder prsnt.app logo&quot; /&gt;
  &lt;figcaption&gt;the original placeholder prsnt.app logo&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We used this logo as the favicon for the site, as the icon for the Chrome plugin, and as the navbar brand icon for the first couple months of prsnt. But it was not really that inspiring; it was, to borrow a word from The Simpsons, perfectly cromulent, but no one looked at it and thought, “oh cool.” A few days after I put this logo out, I made a ticket for myself in Jira that just said, “Make real logo???”&lt;/p&gt;

&lt;h2 id=&quot;making-a-real-logo&quot;&gt;Making a real logo&lt;/h2&gt;

&lt;p&gt;By early August, we had several early adopters in our closed beta, and the app was getting pretty mature. We were preparing for a public launch, including marketing campaigns. We wouldn’t have an opportunity to talk the app up to people and prepare them for it the way we did with our hand-picked early adopters.&lt;/p&gt;

&lt;p&gt;I knew we needed the new logo to have some important characteristics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;visually distinctive&lt;/li&gt;
  &lt;li&gt;friendly&lt;/li&gt;
  &lt;li&gt;implying creativity&lt;/li&gt;
  &lt;li&gt;implying simplicity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I set to work in sketch. I’d toyed a lot of times in the past with typography design, so I was naturally drawn to try making a logo font for prsnt. I tried to limit myself to primitive shapes: circles, rectangles and triangles only.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/07/logo-design-process.jpg&quot; alt=&quot;screenshot of the Sketch design file for the prsnt.app logo&quot; /&gt;
  &lt;figcaption&gt;my design file for the new prsnt.app logo&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Striking the right balance of colors was tricky; in the first attempt, red was too prominent as the bowl of the “p”, the arm of the “r” &lt;em&gt;and&lt;/em&gt; the shoulder of the “n”. Plus, red + blue doesn’t make green, so this felt a little too unnatural.&lt;/p&gt;

&lt;p&gt;Similarly, I had trouble finding the right color balance in the simplified third attempt (middle column in the image above); when I removed the couners from the bowl of the “p” and the shoulder of the “n”, I lost the opportunity to include red. I tried to fix this by making the stems of the “r” and “t” red, but that looked off; plus, this introduced a fifth color, purple (since I was overlapping blue and purple).&lt;/p&gt;

&lt;p&gt;I decided to explore the possibilities of purple (see the furthest right column), but found it tough to justify a 5-color palette when trying to keep things simple; primary colors only.&lt;/p&gt;

&lt;p&gt;In the end, I went with the second column from the left. the inverted horseshoe that makes the collar of the “n” still creates a physics-defying color combination with its stem; red + blue still doesn’t make green. But I wanted to leave it like this for a few reasons. First, as I mentioned above, I wanted to only use primary colors. Second, I felt that the balance of colors was better when I used red for the collar of the “n,” because otherwise it would only be present in the counter of the “p” and the top curve of the “s”. Third (and this is sort of one of those post hoc justifications), it’s sort of an implied magic. The new prsnt.app logo is defying physics!&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/blog/images/2018/09/07/final-logo.jpg&quot; alt=&quot;final prsnt.app logo&quot; /&gt;
&lt;figcaption&gt;the final logo&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The final logo is used as the favicon on the site, as the icon for our Chrome plugin, and as the navbar brand icon. Just the leading “p” is used in most cases, with the full logo used on the homepage in in the navbar on the site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/2018/09/07/right-click.jpg&quot; alt=&quot;screenshot showing the right-click menu item &amp;quot;Save to prsnt.app&amp;quot;, with the new prsnt logo.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/2018/09/07/plugin.jpg&quot; alt=&quot;screenshot showing the prsnt.app plugin open on top of a website, mid-use.&quot; /&gt;&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="logo design" /><category term="graphic design" /><summary type="html">When we started prsnt.app, we didn’t really have a logo in mind; originally, it was just a hacky prototype that ran on our local machines, with no users, no marketing or public pages, just the core layout manipulation functionality and web-clipping functionality.</summary></entry><entry><title type="html">User onboarding: building the house as the guests come in the door</title><link href="/blog/2018/09/06/user-onboarding.html" rel="alternate" type="text/html" title="User onboarding: building the house as the guests come in the door" /><published>2018-09-06T00:00:00+00:00</published><updated>2018-09-06T00:00:00+00:00</updated><id>/blog/2018/09/06/user-onboarding</id><content type="html" xml:base="/blog/2018/09/06/user-onboarding.html">&lt;p&gt;When we launched &lt;a href=&quot;https://prsnt.app&quot; target=&quot;_blank&quot;&gt;prsnt.app&lt;/a&gt; to the public in August 2018, it was a seismic shift in how we brought users into the app.&lt;/p&gt;

&lt;p&gt;Until then, we had been in a closed beta. We sought out connections we had in the interior design industry, asked for referrals, scoured Houzz and local lists for people to reach out to–in short, we scrounged up a group of early adopter users by hook and by crook in the earliest days of prsnt, and that gave us a certain advantage in terms of developmental economy; because these people heard and awful lot about prsnt before they started using it, and because they were qualified by us to make sure they were the kind of people who would want to use it, we were able to skip a lot of the things you traditionally need to put in place. There was no signup process, no in-app training or example, and no need to collect email addresses. We were already in constant contact with those early users, and we had explained the app to death by the time we let them touch it.&lt;/p&gt;

&lt;p&gt;Then, the exciting time came to open the doors and start letting people in… and it was time to very rapidly cobble together some semblance of an entryway for them to walk into. We needed a way to onboard users completely hands-off.&lt;/p&gt;

&lt;h2 id=&quot;version-1-give-them-an-example&quot;&gt;Version 1: Give Them An Example&lt;/h2&gt;

&lt;p&gt;Seeking to save time and reduce comlexity, we opted not to go for a deluxe guided journey for our first pass at onboarding new users. Instead, we thought about how we could most economically mimic the in-person interactions we were able to have with our early adopters.&lt;/p&gt;

&lt;p&gt;Our in-person sales pitch basically went like this: we told them we’re working on an online moodboard and presentation tool, then showed them a physical printout of a beautifully designed example project. Then we’d transition to “let me show you this in the app,” and take that opportunity to show them a few of the most wowing features.&lt;/p&gt;

&lt;p&gt;(This developed, perhaps not coincidentally, into the &lt;a href=&quot;/blog/2018/09/05/video-production.html&quot;&gt;video&lt;/a&gt; we made.)&lt;/p&gt;

&lt;p&gt;For the first pass at in-app onboarding, we decided we would include a copy of that same example project in every new account. The flow would be something like this:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/06/flow-1.jpg&quot; alt=&quot;flow chart showing the first pass of user onboarding in prsnt&quot; /&gt;
  &lt;figcaption&gt;the first pass at user onboarding in prsnt&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;version-2-show-them-the-basics&quot;&gt;Version 2: Show Them The Basics&lt;/h2&gt;

&lt;p&gt;From watching sessions in FullStory, we learned in the first day that this wasn’t really enough. For one thing, many users didn’t even click into the example project, instead they immediately clicked the “Create Project” button (which makes sense; they signed up so they could make moodboards, not to look at someone else’s example project).&lt;/p&gt;

&lt;p&gt;For another, whether or not users explored the example project, not a lot of them knew about our Chrome Plugin (which, while not &lt;em&gt;required&lt;/em&gt; per se, is critical to using the app; he plugin is how users add images to prsnt from other websites). And basically none of them knew how to use the app.&lt;/p&gt;

&lt;p&gt;So, we decided to add a screen to onboarding that explained the basic steps of using prsnt. This screen had three steps: adding images (which included a link to get the plugin), dragging and dropping to rearrange, and saving/printing presentations. The flow was something like this:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/06/flow-2.jpg&quot; alt=&quot;flowchart showing the addition of a how-to screen in the prsnt user onboarding&quot; /&gt;
  &lt;figcaption&gt;onboarding flow in prsnt, now with a &quot;how to&quot; screen&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;version-3-its-all-about-the-plugin&quot;&gt;Version 3: It’s All About The Plugin!&lt;/h2&gt;

&lt;p&gt;It was clear from watching sessions after we made that change, though, that we needed to make the plugin super apparent to new users, above all else. Users were seeing this three-step screen, not clicking the “get the plugin” link, then just proceeding on to the same pitfalls that awaited them before we put the screen there–they would click into the example project and not get it, or they would click to create a project and, well, still not get it.&lt;/p&gt;

&lt;p&gt;At the time, the only link to get the plugin in the app was in the settings menu–a place we had shoved it, for lack of a better place to put it, back when we had the luxury of hand-holding all our users through the process. But it was clearly not discoverable here.&lt;/p&gt;

&lt;p&gt;So we decided to scrap the three-step “how to” page, and I quickly edited it to be solely about the plugin. The h1 said “Before you get started, grab our Chrome plugin”; the only image on the page showed the plugin in action; and there was a big fat “Get the plugin” CTA button beneath that.&lt;/p&gt;

&lt;p&gt;So now the flow looked like:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/06/flow-3.jpg&quot; alt=&quot;flowchart showing the addition of a 'get the plugin' screen to the user onboarding flow of prsnt&quot; /&gt;
  &lt;figcaption&gt;onboarding flow in prsnt, now with a &quot;get the plugin&quot; screen&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Which worked pretty well, in terms of getting people to add the plugin; but it didn’t solve our “how does this work?” problem.&lt;/p&gt;

&lt;h2 id=&quot;version-4-the-medium-is-the-message&quot;&gt;Version 4: The Medium Is The Message&lt;/h2&gt;

&lt;p&gt;On a call with an advisor, we struck on a novel idea: we’re already planting an example project in every new account. Why not change that example project into a tutorial on how to use the app?&lt;/p&gt;

&lt;p&gt;It was fairly simple to change it; we were already provisioning the example projects in new accounts from a live project in a special account we set up just for managing the example project. All I had to do was go in and change that project. We renamed it to “How to use prsnt.app,” and put in about 15 pages of basic text blocks explaining the different features of the app. (True story: the very first version of that example project was full of dog pics I found on google images. I still don’t know why we thought that was a good idea.) The images in the project were interactive, with CTA text like “crop me to so all four emoji are visible” and “click [x] to remove me from the page”.&lt;/p&gt;

&lt;p&gt;We also decided to bring people directly to this example project on signup, instead of bringing them to their projects homepage and letting them choose to click into the project.&lt;/p&gt;

&lt;p&gt;So, now we had a flow like this:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/06/flow-4.jpg&quot; alt=&quot;flowchart showing the user onboarding flow of prsn with a 'how to' project included&quot; /&gt;
  &lt;figcaption&gt;onboarding flow in prsnt, now with a &quot;how to&quot; project&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;version-5-skip-to-the-point&quot;&gt;Version 5: Skip To The Point&lt;/h2&gt;

&lt;p&gt;Watching sessions for new users in that flow, it became clear to us that some people just want to get to the damn project making already; many users would land on the example project, and without reading any of the text, start gutting it so they could put in their own images. Deprived of an easy affordance to create a new project form scratch, they were taking our example project and making it into what they wanted.&lt;/p&gt;

&lt;p&gt;So we compromised on this: we picked the top 6 things from the “how to” project, and put them all on one page. We titled it “Tutorial Page.” Then we put together one beautiful example page, and titled it “Example - Midcentury Modern Bedroom.” The rest, we deleted. We even included directions on the tutorial page for how to delete the tutorial page, just to make it clear that this was behavior we were willing to accommodate.&lt;/p&gt;

&lt;p&gt;We also realized: if it’s just two pages, we dont really need to set up a whole example project for this. So we changed it so that the first project you create in prsnt will include these two pages. Now the flow looks like this:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/09/06/flow-5.jpg&quot; alt=&quot;flowchart representing the end result of the onboarding reimagining process&quot; /&gt;
  &lt;figcaption&gt;onboarding flow in prsnt as of September 2018&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name>Chad Lavimoniere</name></author><category term="user onboarding" /><category term="UX" /><summary type="html">When we launched prsnt.app to the public in August 2018, it was a seismic shift in how we brought users into the app.</summary></entry><entry><title type="html">Video production</title><link href="/blog/2018/09/05/video-production.html" rel="alternate" type="text/html" title="Video production" /><published>2018-09-05T00:00:00+00:00</published><updated>2018-09-05T00:00:00+00:00</updated><id>/blog/2018/09/05/video-production</id><content type="html" xml:base="/blog/2018/09/05/video-production.html">&lt;h2 id=&quot;prsntapp-promotional-video&quot;&gt;prsnt.app promotional video&lt;/h2&gt;
&lt;p&gt;When we first started working on &lt;a href=&quot;https://prsnt.app&quot; target=&quot;_blank&quot;&gt;prsnt.app&lt;/a&gt;, my cofounder Pete made a simple screencap explainer video to show how it worked. It was simple, it was quick, it was cheap.&lt;/p&gt;

&lt;p&gt;But when we started to gain traction, it became clear that we needed to make a more polished looking video.&lt;/p&gt;

&lt;p&gt;I made the following video in Adobe Premiere Pro. We filmed Pete’s hands turning the pages in our office. The voiceover was provided by a VO artist from voicebunny.com (I highly recommend them), the music is from incompetech.com (also highly recommend him), and I took all the screencap video on my macbook. It took about 5 hours of total production and editing work, not including the business day or so of turnaround time for the voiceover.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/6_mb4DlV-Wc?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;prsntapp-video-tag&quot;&gt;prsnt.app video tag&lt;/h2&gt;

&lt;p&gt;I also made a brief video tag for prsnt.app, so that others can append it to their screencap tutorial videos and maintain brand identity, without making me a bottleneck in their video editing/uploading workflow.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/i3gWp60HGTU?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;arazoocom-promotional-video&quot;&gt;Arazoo.com promotional video&lt;/h2&gt;

&lt;p&gt;This is a video I produced for us at Arazoo.com back in late 2016/early 2017. The video was shot and edited by my friend &lt;a href=&quot;https://www.noahtherrien.com/&quot; target=&quot;_blank&quot;&gt;Noah Therrien&lt;/a&gt; at &lt;a href=&quot;http://www.sandenwolff.com&quot; target=&quot;_blank&quot;&gt;Sanden Wolff&lt;/a&gt;. I wrote the script for this video, recruited/managed talent, and reviewed/critiqued edits.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/Tch2cxOHXA8?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;arazoocom-explainer-video&quot;&gt;Arazoo.com explainer video&lt;/h2&gt;

&lt;p&gt;This is an explainer video I made for the homepage of Arazoo.com. I wrote the script, contracted the voice talent, took the screencap video, and edited it.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/4Jrv0VYWIUQ?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Chad Lavimoniere</name></author><category term="video production" /><category term="marketing" /><summary type="html">prsnt.app promotional video When we first started working on prsnt.app, my cofounder Pete made a simple screencap explainer video to show how it worked. It was simple, it was quick, it was cheap.</summary></entry><entry><title type="html">Immersive design sprints</title><link href="/blog/2017/05/03/design-sprint.html" rel="alternate" type="text/html" title="Immersive design sprints" /><published>2017-05-03T00:00:00+00:00</published><updated>2017-05-03T00:00:00+00:00</updated><id>/blog/2017/05/03/design-sprint</id><content type="html" xml:base="/blog/2017/05/03/design-sprint.html">&lt;p&gt;In April 2017, my colleague Pete and I were able to go to &lt;a href=&quot;http://www.newhaircut.com/design-sprint-academy/about-us&quot; target=&quot;_blank&quot;&gt;New Haircut’s “Immersive Design Sprint” Workshop&lt;/a&gt; here in New York, to learn about how we can start using design sprints at &lt;a href=&quot;https://arazoo.com&quot; target=&quot;_blank&quot;&gt;Arazoo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the workshop description:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The workshop is fast-paced, hands-on, time-boxed, and immersive. We’ll move from an initial product idea to a hi-fidelity prototype that we’ll use to test on live customers. In 2 intensive days, you’ll learn and practice different ideation techniques and the best methods to empathize with your customers like Lightning Demos, Sketching, User Story Mapping, Prototyping and Customer Interviews.&lt;/p&gt;

  &lt;p&gt;[…] By the end of the workshop, you’ll have the right knowledge and process to drive hi-impact innovation inside your organization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Compressing a week-long process into two days is already pretty fast-paced; but we were also squeezing in learning about the process, talking about it as we did it, and evaluating after each step. It was about two weeks’ worth of work in just two days!&lt;/p&gt;

&lt;h2 id=&quot;the-teams&quot;&gt;The Teams&lt;/h2&gt;

&lt;p&gt;There were ten people in the workshop—mostly product managers and designers, but we had at least one developer (Pete), a healthcare tech specialist, a startup founder, and a project manager. There were even three folks from geocaching.com who flew in from Seattle to take the workshop so they could start a design sprint &lt;em&gt;that week&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The facilitator, Jay, split us up into two five-person teams. Besides me, my team had Sonali, a healthcare tech specialist; Maria, an office manager and future design sprint facilitator from Geocaching; Kristine, a freelance UX Designer; and Ben, the product manager at Geocaching.&lt;/p&gt;

&lt;h2 id=&quot;the-assignment&quot;&gt;The Assignment&lt;/h2&gt;

&lt;p&gt;At the beginning of the first day of the workshop, Jay gave us a little exercise: he had us look through some photos from his friend’s apartment, and try to pick out some things that gave hints about the person’s life and preferences. This was sort of a warm-up in doing careful observation and user empathy. It turns out it was the apartment of Jay’s friend Markus, in Romania.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/7.jpg&quot; alt=&quot;Doing some (canned) user research with my team. Ben and Kristine (top), Kristine, Me, Sonali and Maria (bottom)&quot; /&gt;
  &lt;figcaption&gt;Doing some (canned) user research with my team. Ben and Kristine (top), Kristine, Me, Sonali and Maria (bottom)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We watched a video of Markus being interviewed about gift-giving, and this is where we learned what the rest of the workshop would be about: Jay told us that our assignment would be to design a better solution for gift giving.&lt;/p&gt;

&lt;p&gt;While we watched the video, we jotted down on sticky notes all of our impressions of what Markus was thinking, saying, doing, and feeling in the interview video.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/2.jpg&quot; /&gt;
  &lt;figcaption&gt;Markus, in sticky note form&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;design-sprint-day-1---mapping&quot;&gt;Design Sprint Day 1 - Mapping&lt;/h2&gt;

&lt;p&gt;On the first day of a design sprint, you gather your stakeholders (in this case, they recommend 7 or fewer people; for us, of course, it was the 5 people on our workshop teams) and talk through the problem you’re looking to solve with this design sprint. Key questions are “Why are we working on this” and “Where do we want to be with this in 6-12 months?”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Why are we working on this? Where do we want to be with this in 6-12 months?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The biggest takeaways from the Mapping day are sprint questions and customer journey maps.&lt;/p&gt;

&lt;p&gt;You make sprint questions by asking as a team, “what are the conditions for success on this project?” and then turning each of those conditions into a question. For example, if one of the conditions for success is that the user is able to go from first encounter with the app to a purchase in under 5 minutes, one of the sprint questions would be, “did the user get from first experience to purchase in under 5 minutes?”&lt;/p&gt;

&lt;p&gt;The sprint questions are the checklist of items you test against at the end of the week.&lt;/p&gt;

&lt;p&gt;You make a customer journey map by taking the end goal you want your users to achieve and mapping out the high-level steps between their problem and your solution. This becomes the rough framework for the sketching you do later.&lt;/p&gt;

&lt;p&gt;At the end of the first day, you bring in “the experts,” i.e., the people whose experience and input is important on this, but who couldn’t be in the room for the rest of the process. As a design sprint group, interview each of them one at a time about what you’ve come up with, and capture some “how might we”s (cf. &lt;a href=&quot;http://www.designkit.org/methods/3&quot; target=&quot;_blank&quot;&gt;http://www.designkit.org/methods/3&lt;/a&gt;). Refine and fill in the customer journey map by identifying the top “How might we”s and adding them to the map at the appropriate steps. This will help target what step in the process should be the focus.&lt;/p&gt;

&lt;h2 id=&quot;design-sprint-day-2---sketching&quot;&gt;Design Sprint Day 2 - Sketching&lt;/h2&gt;

&lt;p&gt;The team breaks out to do some individual look and feel research and brings it all back to the group. We used a slack channel for this, just binging images and links that seemed at all relevant to what we were doing, and then we all worked through them together to see what we could glean from it.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/5.jpg&quot; alt=&quot;Sketching with my team. Ben, me and Kristine (back), Sonali and Maria (front)&quot; /&gt;
  &lt;figcaption&gt;Sketching with my team. Ben, me and Kristine (back), Sonali and Maria (front)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Then we all individually took notes on what aspects of the research seemed most useful to us, doodled ideas and tried to come up with as many possible (and even not-necessarily-possible) solutions to the problem as we could. (See &lt;a href=&quot;https://library.gv.com/the-product-design-sprint-diverge-day-2-c7a5df8e7cd0&quot; target=&quot;_blank&quot;&gt;https://library.gv.com/the-product-design-sprint-diverge-day-2-c7a5df8e7cd0&lt;/a&gt; for details.) The ending part, with the voting and stickers, we actually did as part of “Day 3” in the workshop.&lt;/p&gt;

&lt;h2 id=&quot;design-sprint-day-3---deciding&quot;&gt;Design Sprint Day 3 - Deciding&lt;/h2&gt;

&lt;p&gt;The way we did the “Deciding” day started with the voting process described in that link above, in “Day 2”. Everyone got a few stickers to identify interesting points in the sketches we had come up with, and then The Decider had sort of the overall vote for what we we would go.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/1.jpg&quot; alt=&quot;photo of dot-stickers used to represent votes from participants&quot; /&gt;
  &lt;figcaption&gt;Votes on our customer journey map&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In all honesty, we sort of sped through this part of the process in the workshop. In my team in the workshop, I think in part because this was a low-stakes environment, so there wasn’t really as much conflict as you might expect in a real team where a real product and real career decisions are in play. I think the conflict gathering thing mentioned in the &lt;a href=&quot;https://library.gv.com/the-product-design-sprint-decide-day-3-7d4804bd2fd1#d8e7&quot; target=&quot;_blank&quot;&gt;GV blog&lt;/a&gt; is an interesting one, I’d like to try it on my team.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/3.jpg&quot; alt=&quot;photo of my hand-drawn phone screen wireframe&quot; /&gt;
  &lt;figcaption&gt;My three-screen idea&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At the end of the deciding day, you should have a clear direction that your prototyping will go, and have the buy-in of the whole design sprint team.&lt;/p&gt;

&lt;h2 id=&quot;design-sprint-day-4---prototyping&quot;&gt;Design Sprint Day 4 - Prototyping&lt;/h2&gt;

&lt;p&gt;This is, unsurprisingly I think, the day that was the most straightforward to me. Take the ideas that the team has come up with so far and make a prototype!&lt;/p&gt;

&lt;p&gt;We recapped the decisions we had made the previous day (i.e., about 20min previously) and started sketching out our ideas on the board.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/4.jpg&quot; alt=&quot;photo of a large hand-drawn prototype on an easel&quot; /&gt;
  &lt;figcaption&gt;An early sketch of our team's prototype&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;After we figured out what screens we would need, we split the team up into different roles; the marketing person wrote copy, someone went and googled around for stock images to use in our design, the Decider in the group sort of acted as the project manager here, floating between people and keeping an eye on the clock.&lt;/p&gt;

&lt;p&gt;It was a real mad rush to build the prototype, as we only had 2 hours total! Obviously there would be a lot more time in a real design sprint.&lt;/p&gt;

&lt;h2 id=&quot;design-sprint-day-5---testing&quot;&gt;Design Sprint Day 5 - Testing&lt;/h2&gt;

&lt;p&gt;Since the workshop was compressed into 2 days of teaching and trying, days 3-5 were all on the same day for us. Day 5 was the culmination of everyhing?when we brought in some folks to user test our prototype. We were able to get some people from Alpha Experience to come in to test our prototypes for us.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2017/05/03/6.jpg&quot; alt=&quot;screenshot from our InVision prototype&quot; /&gt;
  &lt;figcaption&gt;My team's prototype&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We each only had time for 2 users to test the designs, though of course you’d have more in a real design sprint—ideally, 5 or 6. One person conducted the interview, while the others observed and took notes. We took notes on stickynotes and placed them on a &lt;a href=&quot;https://library.gv.com/the-product-design-sprint-validate-day-5-761292b20d05#98b0&quot; target=&quot;_blank&quot;&gt;“scoreboard”&lt;/a&gt;. At the end we worked through what worked and what didn’t.&lt;/p&gt;

&lt;p&gt;And that’s the end of a design sprint! The next step is a smaller iteration on the findings from the user testing, and then ideally it goes to development. Or, not as ideally, you’ve figured out that the idea was bad—so back to step one you go.&lt;/p&gt;

&lt;p&gt;My team’s final prototype: &lt;a href=&quot;https://invis.io/5KBI7THM4#/231373346_1_-_Relationship&quot; target=&quot;_blank&quot;&gt;https://invis.io/5KBI7THM4#/231373346&lt;em&gt;1&lt;/em&gt;-_Relationship&lt;/a&gt;&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="design sprint" /><category term="UX" /><summary type="html">In April 2017, my colleague Pete and I were able to go to New Haircut’s “Immersive Design Sprint” Workshop here in New York, to learn about how we can start using design sprints at Arazoo.</summary></entry><entry><title type="html">Rebuilding sitewide navigation in Arazoo</title><link href="/blog/2017/05/02/arazoo-navigation.html" rel="alternate" type="text/html" title="Rebuilding sitewide navigation in Arazoo" /><published>2017-05-02T00:00:00+00:00</published><updated>2017-05-02T00:00:00+00:00</updated><id>/blog/2017/05/02/arazoo-navigation</id><content type="html" xml:base="/blog/2017/05/02/arazoo-navigation.html">&lt;p&gt;Hiring our new CTO, Peter Stern, back in early 2017 was an excellent opportunity for us at Arazoo to reexamine some of the design decisions that were made early on but were no longer carrying their weight. Peter was fresh to our org and had no emotional ties to our existing code. Whereas I’d had problems in the past getting user testing and user experience at the front of the process, Pete naturally gravitated towards the “let’s go talk to people” side of things.&lt;/p&gt;

&lt;h2 id=&quot;too-much-execution-not-enough-learning&quot;&gt;Too much execution, not enough learning&lt;/h2&gt;

&lt;p&gt;Because we had been working in “execution” mode rather than in a “lean” learning-oriented way, our product had become sort of a palimpsest of compromises. We wanted to build Large Featureset X, but technical limitations, time (that is, budget) limitations, or both meant we built Y, which is sort of like X, but with fewer features. Meanwhile, we didn’t run any of this by our users or even think about the notion of what an MVP of that solution might really look like.&lt;/p&gt;

&lt;p&gt;Then in a subsequent sprint, we would manage to add some more of X to Y. Along the way, someone might have an idea elsewhere that has design ramificaitons that ripple throughout the product. What we wanted to be X, and built as Y, now becomes Z. It’s &lt;em&gt;okay&lt;/em&gt;, but it’s a feature that was born from outside constraints rather than purpose-built to serve a user need.&lt;/p&gt;

&lt;p&gt;And more importantly, it’s not really something we ever tested on users, or even built because they said they needed it.&lt;/p&gt;

&lt;p&gt;Navigation in the Arazoo web app had been one of these &lt;del&gt;X&lt;/del&gt; &lt;del&gt;Y&lt;/del&gt; Z features.&lt;/p&gt;

&lt;p&gt;In the original MVP that was developed for our founders by consultants, the feature set was small enough and the data scarce enough that navigation was able to be functional and superficial at the same time. There were only a couple different things you could do: Be on your firm homepage, go into a project, create a product, and invite new users.&lt;/p&gt;

&lt;p&gt;As the features in Arazoo grew and gained complexity, navigation was scaled to accommodate it. More and more functionality (even editing some kinds of data) were squeezed into the nav.&lt;/p&gt;

&lt;p&gt;We found from session playback in FullStory that users were often confused by our navigation. They weren’t able to get to the features that could help them, so they would just give up and abandon.&lt;/p&gt;

&lt;p&gt;At the time, there were a few major things in Arazoo that a user could access:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the “Global Library,” a collection of all the public products all Arazoo users had saved from the web. It had category-based subnavigation.&lt;/li&gt;
  &lt;li&gt;the “Firm”, a user’s team. This had a few subnav items as well:
    &lt;ul&gt;
      &lt;li&gt;the “Firm Library” was the collection of that firm’s products&lt;/li&gt;
      &lt;li&gt;the “Firm Projects” page, where that firm’s projects (collections of products that will be used together for a construction project) were gathered.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;the “Personal Library,” a user’s personal list of products&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to these, we had various marketing pages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the homepage&lt;/li&gt;
  &lt;li&gt;the pricing page&lt;/li&gt;
  &lt;li&gt;a team page&lt;/li&gt;
  &lt;li&gt;a product explainer page&lt;/li&gt;
  &lt;li&gt;a link to our FAQs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the above items were packed into &lt;em&gt;one settings menu&lt;/em&gt; in Arazoo at the time. We had a top nav bar that displayed the breadcrumb for your current page, and you used this settings menu to hop to different places.&lt;/p&gt;

&lt;p&gt;You &lt;em&gt;also&lt;/em&gt; used this settings menu to edit some kinds of data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;your user display name and image&lt;/li&gt;
  &lt;li&gt;your firm’s display name and image&lt;/li&gt;
  &lt;li&gt;project names&lt;/li&gt;
  &lt;li&gt;workspace (i.e., folders inside a project) names&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/05/13/old-nav.png&quot; alt=&quot;screenshot of the old nav in Arazoo&quot; /&gt;
  &lt;figcaption&gt;see that &quot;settings&quot; icon in the top left? That's where everything lived.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It was… sort of a mess. There was a huge amount of importance placed on that one affordance, and a mix of navigational and functional features.&lt;/p&gt;

&lt;p&gt;##Fixing it, part one: talking to users&lt;/p&gt;

&lt;p&gt;One major difference was that for the first time, we &lt;em&gt;went to talk to users about it&lt;/em&gt;. Our users told us what we already observed from FullStory: the nav was confusing. But more importantly, they told us how it confused them; they let us watch them get confused; and they asked for things.&lt;/p&gt;

&lt;p&gt;People like to toss around that old Henry Ford quote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If I had asked people what they wanted, they’d have asked for a faster horse.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But honestly: yes. It’s not terrible if people ask you for a faster horse, as long as you can ask some &lt;em&gt;whys&lt;/em&gt; to get to the bottom of it. People ask for a faster horse because they want to go faster, and they’re used to horses. It’s the going faster you need to solve.&lt;/p&gt;

&lt;p&gt;So when our users asked for things in our nav, we thanked them for their suggestions then asked them &lt;em&gt;why they wanted that&lt;/em&gt;. And generally it was all about orientation. Our users wanted to know where the heck they were in our site. The wanted to be able to quickly intuit how to get from one place to another.&lt;/p&gt;

&lt;p&gt;We took their feedback and our observations and mocked up some solutions. For example:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/blog/images/2018/05/13/new-nav-1.png&quot; alt=&quot;screenshot of first rough draft of new Arazoo navigation&quot; /&gt;
  &lt;figcaption&gt;the first round of design improvements&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In this early mockup, I did several things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;moved the settings icon to the right, where people expect settings stuff to be&lt;/li&gt;
  &lt;li&gt;gave four obvious navigational anchors:
    &lt;ul&gt;
      &lt;li&gt;the brand icon takes you to the homepage&lt;/li&gt;
      &lt;li&gt;Products goes to the All Products page (we rebranded the “Global Library” because… well, “All Products” is what it actually contains)&lt;/li&gt;
      &lt;li&gt;Libraries is a dropdown with all the libraries you have access to&lt;/li&gt;
      &lt;li&gt;Projects is a dropdown with all the projects you have access to&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;a secondary nav bar is there to hold in-page search and sorting&lt;/li&gt;
  &lt;li&gt;knowing where you are is handled with an underline on the top-level bucket you’re in, plus an H1 on the page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We got some positive feedback on this one when we shopped it around to users as just a static image, but they pointed out that this was focused entirely on the app, and didn’t really address the need or desire to check out the static marketing pages.&lt;/p&gt;</content><author><name>Chad Lavimoniere</name></author><category term="information architecture" /><category term="UX" /><summary type="html">Hiring our new CTO, Peter Stern, back in early 2017 was an excellent opportunity for us at Arazoo to reexamine some of the design decisions that were made early on but were no longer carrying their weight. Peter was fresh to our org and had no emotional ties to our existing code. Whereas I’d had problems in the past getting user testing and user experience at the front of the process, Pete naturally gravitated towards the “let’s go talk to people” side of things.</summary></entry></feed>